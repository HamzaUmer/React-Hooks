{"version":3,"sources":["Component/Counter.jsx","Component/CounterRed.jsx","Component/ToggleButton.jsx","Context/CompC.jsx","Context/CompB.jsx","Context/CompA.jsx","App.jsx","index.js"],"names":["Counter","useState","numinc","setNumInc","useEffect","alert","className","onClick","reducer","state","action","type","CounterRed","useReducer","dispatch","ToggleButton","backgroundColor","bgcolor","setBGcolor","color","btnStyle","setBtnStyle","btnText","setBtnText","headStyle","setHeadStyle","style","CompC","fname","useContext","FirstName","CompB","CompA","createContext","App","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAqBeA,EAlBC,WAAO,IAAD,EACOC,mBAAS,GADhB,mBACbC,EADa,KACNC,EADM,KAMpB,OAJAC,qBAAU,WACRC,MAAM,aACN,CAACH,IAGD,sBAAKI,UAAU,YAAf,UACE,oBAAIA,UAAU,WAAd,+BACF,sBAAKA,UAAU,UAAf,UACA,wBAAQA,UAAU,OAAOC,QAAS,kBAAKJ,EAAUD,EAAO,IAAxD,yBACA,wBAAQI,UAAU,OAAOC,QAAS,kBAAKJ,EAAUD,EAAO,IAAxD,4BAEA,oBAAII,UAAU,UAAd,SAAyBJ,QCZvBM,G,MAAU,SAACC,EAAOC,GACnB,MAAmB,QAAhBA,EAAOC,KACCF,EAAO,EAEC,QAAhBC,EAAOC,KACCF,EAAM,EAEVA,IAiBGG,EAdI,WAAO,IAAD,EACIC,qBAAWL,EAZnB,GAWI,mBACdC,EADc,KACRK,EADQ,KAEvB,OACM,sBAAKR,UAAU,YAAf,UACE,oBAAIA,UAAU,WAAd,gCACF,sBAAKA,UAAU,UAAf,UACA,wBAAQA,UAAU,OAAOC,QAAS,kBAAKO,EAAS,CAACH,KAAM,SAAvD,yBACA,wBAAQL,UAAU,OAAOC,QAAS,kBAAKO,EAAS,CAACH,KAAM,SAAvD,4BAEA,oBAAIL,UAAU,WAAd,SAA0BG,QCiBnBM,G,MArCM,WAAO,IAAD,EACMd,mBAAS,CAClCe,gBAAkB,UAFC,mBAChBC,EADgB,KACPC,EADO,OAISjB,mBAAU,CAClCe,gBAAgB,QAChBG,MAAO,UANQ,mBAIhBC,EAJgB,KAINC,EAJM,OAQMpB,mBAAS,kBARf,mBAQhBqB,EARgB,KAQRC,EARQ,OASUtB,mBAAS,CAClCkB,MAAM,UAVS,mBAShBK,EATgB,KASLC,EATK,KA2BzB,OACE,sBAAKnB,UAAU,YAAYoB,MAAOT,EAAlC,UACI,oBAAIX,UAAU,WAAWoB,MAAOF,EAAhC,8BACA,qBAAKlB,UAAU,SAAf,SACA,wBAAQA,UAAU,MAAMC,QAAS,WAlBF,UAA5BU,EAAQD,iBACPE,EAAW,CAACF,gBAAiB,UAC7BK,EAAY,CAACL,gBAAgB,QAASG,MAAM,UAC5CI,EAAW,kBACXE,EAAa,CAACN,MAAM,YAGpBD,EAAW,CAACF,gBAAiB,UAC7BK,EAAY,CAACL,gBAAgB,QAASG,MAAM,UAC5CI,EAAW,kBACXE,EAAa,CAACN,MAAM,YAQ6BO,MAAON,EAA5D,SAAuEE,WCtBhEK,EATD,WACV,IAAMC,EAAQC,qBAAWC,GAC3B,OACE,mCACA,qBAAIJ,MAAO,CAACP,MAAO,QAASb,UAAU,OAAtC,wBAAyDsB,EAAzD,gBCMWG,EAVD,WACV,IAAMH,EAAQC,qBAAWC,GAC3B,OACE,qCACA,qBAAIJ,MAAO,CAACP,MAAO,SAAUb,UAAU,OAAvC,wBAA0DsB,EAA1D,aACA,cAAC,EAAD,QCYWI,G,MAfD,WACV,IAAMJ,EAAQC,qBAAWC,GAC3B,OACE,mCACA,sBAAKxB,UAAU,YAAf,UACA,oBAAIA,UAAU,WAAd,iCACI,sBAAKA,UAAU,UAAf,UACJ,qBAAIoB,MAAO,CAACP,MAAO,OAAQb,UAAU,OAArC,wBAAwDsB,EAAxD,aACA,cAAC,EAAD,cCPSE,EAAYG,0BAcVC,EAbH,WACV,OACA,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACJ,EAAUK,SAAX,CAAoBC,MAAO,YAA3B,SACA,cAAC,EAAD,MAEA,cAAC,EAAD,QCXFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.df051f31.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport \"./counter.css\"\r\n//UseState Example\r\nconst Counter = () => {\r\n  const [numinc,setNumInc] = useState(0);\r\n  useEffect(()=> {\r\n    alert(\"Clicked\");\r\n  },[numinc])\r\n\r\n  return (\r\n    <div className=\"container\" >\r\n      <h1 className='textdes1'>UseEffect Example</h1>\r\n    <div className=\"design1\">\r\n    <button className=\"btn1\" onClick={()=> setNumInc(numinc+1)}>Increment 1</button>\r\n    <button className=\"btn2\" onClick={()=> setNumInc(numinc-1)}>Decrement 1</button>\r\n    </div>\r\n    <h1 className='textdes'>{numinc}</h1>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Counter","import React, { useReducer } from 'react'\r\nimport \"./counterred.css\"\r\n\r\nconst initialState = 0;\r\nconst reducer = (state, action) => {\r\n     if(action.type === \"INC\") {\r\n         return state +1;\r\n     }\r\n     if(action.type === \"DEC\"){\r\n         return state-1;\r\n     }\r\n     return state;\r\n}\r\n\r\nconst CounterRed = () => {\r\n    const [state,dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n        <div className=\"container\" >\r\n          <h1 className='textdes5'>UseReducer Example</h1>\r\n        <div className=\"design4\">\r\n        <button className=\"btn3\" onClick={()=> dispatch({type: \"INC\"})}>Increment 1</button>\r\n        <button className=\"btn4\" onClick={()=> dispatch({type: \"DEC\"})}>Decrement 1</button>\r\n        </div>\r\n        <h1 className='textdes4'>{state}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CounterRed","import React, { useState } from 'react'\r\nimport './toggle.css';\r\n//UseState Hook Example\r\nconst ToggleButton = () => {\r\n    const [bgcolor, setBGcolor] =useState({\r\n        backgroundColor : \"white\"\r\n    }); \r\n    const [btnStyle, setBtnStyle] = useState ({\r\n            backgroundColor:\"black\",\r\n            color: \"white\"\r\n    });\r\n    const [btnText,setBtnText] = useState(\"Click to Black\");\r\n    const [headStyle, setHeadStyle]= useState({\r\n            color:\"black\"\r\n    })\r\n    const colorChange = ()=> {\r\n        if(bgcolor.backgroundColor === \"white\"){\r\n            setBGcolor({backgroundColor: \"black\"});\r\n            setBtnStyle({backgroundColor:\"white\", color:\"black\"});\r\n            setBtnText(\"Click to White\");\r\n            setHeadStyle({color:\"white\"});\r\n        }\r\n        else {\r\n            setBGcolor({backgroundColor: \"white\"});\r\n            setBtnStyle({backgroundColor:\"black\", color:\"white\"});\r\n            setBtnText(\"Click to Black\");\r\n            setHeadStyle({color:\"black\"});\r\n        }\r\n\r\n    }\r\n  return (\r\n    <div className=\"container\" style={bgcolor}>\r\n        <h1 className='textdes3' style={headStyle}>UseState Example</h1>\r\n        <div className='design'>\r\n        <button className='btn' onClick={()=> colorChange()} style={btnStyle}>{btnText}</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToggleButton","import React, { useContext } from 'react'\r\nimport { FirstName } from '../App'\r\n\r\nconst CompC = () => {\r\n    const fname = useContext(FirstName);\r\n  return (\r\n    <>\r\n    <h1 style={{color: 'blue'}} className='head'>My Name is {fname} from C</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompC","import React, { useContext } from 'react'\r\nimport CompC from './CompC'\r\nimport { FirstName } from '../App'\r\nconst CompB = () => {\r\n    const fname = useContext(FirstName)\r\n  return (\r\n    <>\r\n    <h1 style={{color: 'green'}} className='head'>My Name is {fname} from B</h1>\r\n    <CompC/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompB","import React, { useContext } from 'react'\r\nimport CompB from './CompB'\r\nimport { FirstName } from '../App'\r\nimport \"./context.css\"\r\n//Context API simple Example\r\nconst CompA = () => {\r\n    const fname = useContext(FirstName)\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n    <h1 className='textdes2'>Context API example</h1>\r\n        <div className=\"design2\">\r\n    <h1 style={{color: 'red'}} className='head'>My Name is {fname} from A</h1>\r\n    <CompB/>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompA","import { createContext } from \"react\";\r\nimport Counter from \"./Component/Counter\";\r\nimport CounterRed from \"./Component/CounterRed\";\r\nimport ToggleButton from \"./Component/ToggleButton\";\r\nimport CompA from \"./Context/CompA\";\r\n\r\nexport const FirstName = createContext();\r\nconst App = () => {\r\n  return (\r\n  <>\r\n  <ToggleButton/>\r\n  <Counter/>\r\n  <FirstName.Provider value={\"Mir Bunny\"}>\r\n  <CompA/>\r\n  </FirstName.Provider>\r\n  <CounterRed/>\r\n  </>\r\n  )\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}